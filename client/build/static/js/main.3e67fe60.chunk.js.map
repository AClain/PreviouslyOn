{"version":3,"sources":["assets/js/user.js","components/global/Header.jsx","components/global/GetCode.jsx","assets/js/api.js","components/card/Card.jsx","components/card/CardList.jsx","components/global/Home.jsx","components/global/Discover.jsx","components/friend/Friend.jsx","components/friend/FriendListRecommandation.jsx","components/friend/FriendList.jsx","components/friend/Friends.jsx","components/global/Stars.jsx","components/show/EpisodeCard.jsx","components/show/Seasons.jsx","components/show/Show.jsx","components/episode/Episode.jsx","components/global/Login.jsx","components/global/Logout.jsx","routes/Routes.js","index.js"],"names":["this","clientId","secret","window","location","href","Promise","resolve","reject","axios","post","key","access_token","getToken","then","res","catch","err","code","client_id","client_secret","redirect_uri","data","token","localStorage","setItem","removeItem","getItem","useStyles","makeStyles","toggleOnIcon","fontSize","color","toggleOffIcon","button","backgroundColor","Header","classes","useState","user","isAuthenticated","toggle","setToggle","Grid","id","container","justify","alignItems","item","xs","className","to","IconButton","onClick","onMouseEnter","onMouseLeave","loading","GetCode","props","useEffect","require","parse","search","console","log","recoverToken","setToken","style","textAlign","CircularProgress","size","limit","get","shows","show","showId","season","episodes","episodeId","episode","responseType","URL","createObjectURL","delete","users","friendId","friendEmail","comment","type","text","addIcon","transition","Card","pressStart","setPressStart","src","images","poster","alt","original_title","onMouseDown","e","Date","now","onMouseUp","replace","seasons","genres","genresOutput","i","genre","push","displayGenres","map","str","maxLen","separator","length","substr","lastIndexOf","shortenDesc","description","private","api","addShow","CardList","Home","setShows","followedShows","Discover","discover","Friend","friend","login","addFriend","FriendListRecommandation","friends","in_account","displayFriend","FriendList","blocked","unblockFriend","blockFriend","deleteFriend","PersonAddIcon","verticalAlign","marginLeft","cursor","Friends","name","setName","setFriends","blockedFriends","setBlockedFriends","friendsRecommandation","setFriendsRecommandation","getRecommandationFriends","getMemberFriends","getBlockedFriends","onChange","target","value","handleName","findFriendByMail","starIcon","Stars","fullStars","setFullStars","halfStar","setHalfStar","emptyStars","setEmptyStars","roundedNote","Math","round","note","empty","fullStarsArray","emptyStarsArray","Star","k","StarBorder","StarHalf","display","moreIcon","transform","seenIcon","notSeenIcon","EpisodeCard","episodePicture","setEpisodePicture","seen","setSeen","getEpisodePicture","title","deleteViewedEpisode","addViewedEpisode","arrowIcon","Seasons","setEpisodes","carousel","React","createRef","getEpisodesBySeason","current","scrollLeft","ref","seasonButton","fontWeight","actived","icons","Show","setShow","currentSeason","setCurrentSeason","favorited","setFavorited","archived","setArchived","match","params","getShow","Object","keys","deleteShowFavorite","addShowFavorite","deleteShowArchive","addShowArchive","notes","mean","toFixed","total","seasons_details","Button","number","commentButton","Episode","setEpisode","setComment","dateformat","getEpisode","inputDate","date","handleComment","sendEpisodeComment","lockOpen","lockClose","Login","lock","setLock","con","discon","removeToken","ConnectedRoute","Component","component","rest","render","NotConnectedRoute","withRouter","exact","path","Logout","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e67fe60.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass User {\n    constructor() {\n        this.clientId = '24a24546e256';\n        this.secret = '8ffe8ae1aff3da64e8c2e52445066880';\n    }\n\n    con() {\n        window.location.href = 'https://www.betaseries.com/en/authorize?client_id=24a24546e256&redirect_uri=http://localhost:3000/getcode ';\n    }\n\n    discon() {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/members/destroy', {\n                key: this.clientId,\n                access_token: this.getToken()\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    recoverToken(code) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/oauth/access_token', {\n                client_id: this.clientId,\n                client_secret: this.secret,\n                redirect_uri: 'http://localhost:3000/getcode',\n                code: code\n            }).then((res) => {\n                resolve(res.data.access_token);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    setToken(token) {\n        localStorage.setItem('token', token);\n    }\n\n    removeToken() {\n        localStorage.removeItem('token');\n    }\n\n    getToken() {\n        const token = localStorage.getItem('token');\n\n        return token;\n    }\n\n    isAuthenticated() {\n        const token = this.getToken();\n\n        if (token === null) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport default new User();","import React, { useState } from 'react';\n\nimport {\n    Grid,\n    IconButton\n} from '@material-ui/core';\n\nimport ToggleOffIcon from '@material-ui/icons/ToggleOff';\nimport ToggleOnIcon from '@material-ui/icons/ToggleOn';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport './css/header.css';\n\nimport user from '../../assets/js/user';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    toggleOnIcon: {\n        fontSize: '75px',\n        color: '#2ecc71'\n    },\n    toggleOffIcon: {\n        fontSize: '75px',\n        color: '#ff2244'\n    },\n    button: {\n        '&:hover': {\n            backgroundColor: 'transparent'\n        }\n    }\n}))\n\nexport default function Header() {\n    const classes = useStyles();\n    const [toggle, setToggle] = useState(user.isAuthenticated());\n\n    return (\n        <Grid\n            id='header' container\n            justify='center' alignItems='center'>\n            <Grid item xs={8}>\n                <Grid container justify='space-evenly' alignItems='center' id='header-links-container'>\n                    <Grid item className='header-links'>\n                        <Link to='/home' className='header-link'>Home</Link>\n                    </Grid>\n                    <Grid item className='header-links'>\n                        <Link to='/discover' className='header-link'>Discover</Link>\n                    </Grid>\n                    <Grid item className='header-links'>\n                        <Link to='/friends' className='header-link'>Friends</Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={3}>\n                <Grid container justify='center' alignItems='center'>\n                    <Grid item>\n                        <IconButton onClick={() => {\n                            if (user.isAuthenticated()) {\n                                window.location.href = '/disconnect';\n                            }\n                        }} onMouseEnter={() => {\n                            if (user.isAuthenticated()) {\n                                setToggle(false);\n                            } else {\n                                setToggle(true);\n                            }\n                        }} onMouseLeave={() => {\n                            if (user.isAuthenticated()) {\n                                setToggle(true);\n                            } else {\n                                setToggle(false);\n                            }\n                        }} className={classes.button}>\n                            {user.isAuthenticated() ? (\n                                toggle ? (\n                                    <ToggleOnIcon className={classes.toggleOnIcon} />\n                                ) : (\n                                        <ToggleOffIcon className={classes.toggleOffIcon} />\n                                    )\n                            ) : (\n                                    toggle ? (\n                                        <ToggleOnIcon className={classes.toggleOnIcon} />\n                                    ) : (\n                                            <ToggleOffIcon className={classes.toggleOffIcon} />\n                                        )\n                                )}\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid >\n    )\n}","import React, { useEffect } from 'react';\n\nimport {\n    Grid,\n    CircularProgress\n} from '@material-ui/core';\n\nimport user from '../../assets/js/user';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    loading: {\n        color: '#ff2244'\n    }\n}))\n\nexport default function GetCode(props) {\n    const classes = useStyles();\n\n    useEffect(() => {\n        const queryString = require('query-string');\n\n        const parsed = queryString.parse(props.location.search);\n\n        const code = parsed.code;\n\n        if (code !== null) {\n            console.log(code);\n            user.recoverToken(code).then((res) => {\n                user.setToken(res);\n                window.location.href = '/home';\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n\n        return () => { };\n    }, [props.location.search]);\n\n    return (\n        <Grid container justify='center' alignItems='center'>\n            <Grid style={{ textAlign: 'center' }} item>\n                <h2>Connexion ...</h2>\n                <CircularProgress size='75px' className={classes.loading} />\n            </Grid>\n        </Grid>\n    )\n}","import axios from 'axios';\n\nimport user from './user';\n\nclass Api {\n    constructor() {\n        this.clientId = '24a24546e256';\n        this.secret = '8ffe8ae1aff3da64e8c2e52445066880';\n        this.token = user.getToken();\n    }\n\n    discover(limit) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/shows/discover?limit=' + limit + '&key=' + this.clientId).then((res) => {\n                resolve(res.data.shows)\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    followedShows() {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/shows/member?key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                console.log(err)\n                reject(err);\n            });\n        })\n    }\n\n    addShow(id) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/shows/show', {\n                id: id,\n                key: this.clientId,\n                access_token: this.token\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    getShow(id) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/shows/display?id=' + id + '&key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res.data.show);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    getEpisodesBySeason(showId, season) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/shows/episodes?id=' + showId + '&season=' + season + '&key=' + this.clientId + \"&access_token=\" + this.token).then((res) => {\n                resolve(res.data.episodes);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    getEpisode(episodeId) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/episodes/display?id=' + episodeId + '&key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res.data.episode);\n            }).catch((err) => {\n                reject(err);\n            });\n        })\n    }\n\n    getEpisodePicture(episodeId) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/pictures/episodes?id=' + episodeId + '&width=350&height=250&key=' + this.clientId, {\n                responseType: 'blob'\n            }).then((res) => {\n                resolve(URL.createObjectURL(res.data));\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    addShowArchive(showId) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/shows/archive', {\n                id: showId,\n                key: this.clientId,\n                access_token: this.token\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    deleteShowArchive(showId) {\n        return new Promise((resolve, reject) => {\n            axios.delete('https://api.betaseries.com/shows/archive?id=' + showId + '&key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    addShowFavorite(showId) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/shows/favorite', {\n                id: showId,\n                key: this.clientId,\n                access_token: this.token\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    deleteShowFavorite(showId) {\n        return new Promise((resolve, reject) => {\n            axios.delete('https://api.betaseries.com/shows/favorite?id=' + showId + '&key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    getRecommandationFriends() {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(\n                    'https://api.betaseries.com/friends/find?key=' + this.clientId + '&access_token=' + this.token\n                )\n                .then((res) => {\n                    resolve(res.data.users);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    addFriend(friendId) {\n        return new Promise((resolve, reject) => {\n            axios\n                .post(\"https://api.betaseries.com/friends/friend\", {\n                    id: friendId,\n                    key: this.clientId,\n                    access_token: this.token,\n                })\n                .then((res) => {\n                    resolve(res.data);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getMemberFriends() {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(\n                    \"https://api.betaseries.com/friends/list?key=\" +\n                    this.clientId +\n                    \"&access_token=\" +\n                    this.token\n                )\n                .then((res) => {\n                    resolve(res.data.users);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    blockFriend(friendId) {\n        return new Promise((resolve, reject) => {\n            axios\n                .post(\"https://api.betaseries.com/friends/block\", {\n                    id: friendId,\n                    key: this.clientId,\n                    access_token: this.token,\n                })\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    unblockFriend(friendId) {\n        return new Promise((resolve, reject) => {\n            axios\n                .delete(\n                    \"https://api.betaseries.com/friends/block?key=\" +\n                    this.clientId +\n                    \"&access_token=\" +\n                    this.token +\n                    \"&id=\" +\n                    friendId\n                )\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    deleteFriend(friendId) {\n        return new Promise((resolve, reject) => {\n            axios\n                .delete(\n                    \"https://api.betaseries.com/friends/friend?key=\" +\n                    this.clientId +\n                    \"&access_token=\" +\n                    this.token +\n                    \"&id=\" +\n                    friendId\n                )\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getBlockedFriends() {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(\n                    \"https://api.betaseries.com/friends/list?key=\" +\n                    this.clientId +\n                    \"&access_token=\" +\n                    this.token +\n                    \"&blocked=true\"\n                )\n                .then((res) => {\n                    resolve(res.data.users);\n                })\n                .catch((err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    addViewedEpisode(episodeId) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/episodes/watched', {\n                id: episodeId,\n                key: this.clientId,\n                access_token: this.token\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    deleteViewedEpisode(episodeId) {\n        return new Promise((resolve, reject) => {\n            axios.delete('https://api.betaseries.com/episodes/watched?id=' + episodeId + '&key=' + this.clientId + '&access_token=' + this.token).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    findFriendByMail(friendEmail) {\n        return new Promise((resolve, reject) => {\n            axios.get('https://api.betaseries.com/friends/find?key=' + this.clientId + '&access_token=' + this.token + '&type=emails&emails=' + friendEmail).then((res) => {\n                resolve(res.data.users);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n\n    sendEpisodeComment(comment, episodeId) {\n        return new Promise((resolve, reject) => {\n            axios.post('https://api.betaseries.com/comments/comment', {\n                type: 'episode',\n                id: episodeId,\n                text: comment,\n                key: this.clientId,\n                access_token: this.token\n            }).then((res) => {\n                resolve(res);\n            }).catch((err) => {\n                reject(err);\n            })\n        })\n    }\n}\n\nexport default new Api();","import React, { useState } from 'react';\n\nimport {\n    Grid,\n    IconButton\n} from '@material-ui/core';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport './css/card.css';\n\nimport api from '../../assets/js/api';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    addIcon: {\n        fontSize: '50px',\n        color: '#ff2244',\n        transition: 'all 0.3s',\n        '&:hover': {\n            color: '#2ecc71'\n        }\n    }\n}))\n\nexport default function Card(props) {\n\n    const [pressStart, setPressStart] = useState(null);\n\n    const classes = useStyles();\n\n    const displayGenres = (genres) => {\n        let genresOutput = [];\n        let i = 0;\n        for (const genre in genres) {\n            genresOutput.push(genre);\n            i++;\n            if (i === 2) {\n                break;\n            }\n        }\n        return genresOutput;\n    }\n\n    const shortenDesc = (str, maxLen, separator = ' ') => {\n        if (str.length <= maxLen) {\n            return str;\n        }\n        return str.substr(0, str.lastIndexOf(separator, maxLen)) + '...';\n    }\n\n    const addShow = (id) => {\n        if (!props.private) {\n            api.addShow(id).then((res) => {\n                console.log(res);\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n\n    const longPress = (id) => {\n        const now = Date.now();\n\n        if ((now - pressStart) > 600) {\n            window.location.replace('/show/' + id);\n        }\n    };\n\n    return (\n        <Grid item xs={4} className='card'>\n            <div className='img-container'>\n                <img\n                    className='card-img' src={props.show.images.poster}\n                    alt={props.show.original_title + 'banner'}\n                    onMouseDown={(e) => {\n                        setPressStart(Date.now())\n                    }}\n                    onMouseUp={(e) => {\n                        longPress(props.show.id);\n                    }} />\n            </div>\n            <div className='infos-container'>\n                <h3 className='card-title'>{props.show.original_title}</h3>\n                <p>Saison(s): <em>{props.show.seasons}</em></p>\n                <p>Genre: {displayGenres(props.show.genres).map((genre, key) =>\n                    <em key={key}>{genre + ' '}</em>\n                )}</p>\n                <p><em>{props.show.episodes}</em> épisode(s)</p>\n                <p><em>{shortenDesc(props.show.description, 150)}</em></p>\n                {\n                    props.private ? (null) : (\n                        <IconButton\n                            onClick={() => { addShow(props.show.id) }}>\n                            <AddBoxIcon\n                                size='large' className={classes.addIcon} />\n                        </IconButton>\n                    )\n                }\n            </div>\n        </Grid>\n    )\n}","import React from 'react';\n\nimport {\n    Grid\n} from '@material-ui/core';\n\nimport Card from './Card';\n\nimport './css/card_list.css';\n\nexport default function CardList(props) {\n    return (\n        <Grid container>\n            {props.shows.map((show, key) =>\n                <Card key={key} show={show} private={props.private ? true : false} />\n            )}\n        </Grid>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport {\n    Grid\n} from '@material-ui/core';\n\nimport api from '../../assets/js/api';\nimport CardList from '../card/CardList';\n\nexport default function Home() {\n    const [shows, setShows] = useState([]);\n\n    useEffect(() => {\n        api.followedShows().then((res) => {\n            setShows(res.data.shows);\n        }).catch((err) => {\n            console.log(err);\n        })\n        return () => { };\n    }, []);\n\n    return (\n        <Grid container>\n            <Grid item>\n                {shows.length > 0 ? (\n                    <CardList shows={shows} private={true} />\n                ) : (null)}\n            </Grid>\n        </Grid>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport {\n    Grid\n} from '@material-ui/core';\n\nimport CardList from '../card/CardList';\n\nimport api from '../../assets/js/api';\n\nexport default function Discover() {\n    const [shows, setShows] = useState([]);\n\n    useEffect(() => {\n        api.discover(15)\n            .then((res) => {\n                setShows(res);\n            })\n            .catch((err) => {\n                console.log('err ' + err);\n            })\n        return () => { };\n    }, []);\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                {shows.length > 0 ? (\n                    <CardList shows={shows} />\n                ) : (null)}\n            </Grid>\n        </Grid>\n    )\n}","import React, { useState } from \"react\";\n\nimport { IconButton, Grid } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nimport api from \"../../assets/js/api\";\n\nimport \"./css/friend.css\";\n\nexport default function Friend(props) {\n\n  const [toggle, setToggle] = useState(true);\n\n  const addFriend = (friendId) => {\n    api\n      .addFriend(friendId)\n      .then((res) => {\n        setToggle(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      {toggle ? (\n        <Grid item xs={2} className=\"friend-box\">\n          <h5>{props.friend.login}</h5>\n          <IconButton\n            onClick={() => {\n              addFriend(props.friend.id);\n            }}\n          >\n            <PersonAddIcon />\n          </IconButton>\n        </Grid>\n      ) : (null)}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport Friend from \"./Friend\";\n\nimport \"./css/friend_list_recommandation.css\";\n\nexport default function FriendListRecommandation(props) {\n  const displayFriend = (friend) => {\n    if (friend.login === \"\" || friend.in_account) {\n      return false;\n    }\n    return true;\n  };\n  return (\n    <Grid container justify=\"center\">\n      {props.friends.map((friend, key) =>\n        displayFriend(friend) ? <Friend key={key} friend={friend} /> : null\n      )}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\n\nimport api from \"../../assets/js/api\";\n\nexport default function FriendList(props) {\n  const blockFriend = (friendId) => {\n    api\n      .blockFriend(friendId)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const unblockFriend = (friendId) => {\n    api\n      .unblockFriend(friendId)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deleteFriend = (friendId) => {\n    api\n      .deleteFriend(friendId)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      {props.friends.map((friend, key) => (\n        <div key={key}>\n          <span>{friend.login} </span>\n          {props.blocked ? (\n            <IconButton\n              onClick={() => {\n                unblockFriend(friend.id);\n              }}\n            >\n              <RestoreFromTrashIcon />\n            </IconButton>\n          ) : (\n            <>\n              <IconButton\n                onClick={() => {\n                  blockFriend(friend.id);\n                }}\n              >\n                <BlockIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  deleteFriend(friend.id);\n                }}\n              >\n                <DeleteForeverIcon />\n              </IconButton>{\" \"}\n            </>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\n\nimport api from \"../../assets/js/api\";\n\nimport FriendListRecommandation from \"./FriendListRecommandation\";\nimport FriendList from \"./FriendList\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"./css/friends.css\";\n\nconst useStyles = makeStyles(() => ({\n  PersonAddIcon: {\n    color: \"#f1f1f1\",\n    fontSize: \"35px\",\n    verticalAlign: \"middle\",\n    marginLeft: '15px',\n    cursor: 'pointer'\n  },\n}));\n\nexport default function Friends(props) {\n  const classes = useStyles();\n\n  const [name, setName] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [blockedFriends, setBlockedFriends] = useState([]);\n  const [friendsRecommandation, setFriendsRecommandation] = useState([]);\n\n  useEffect(() => {\n    api\n      .getRecommandationFriends()\n      .then((res) => {\n        setFriendsRecommandation(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    api\n      .getMemberFriends()\n      .then((res) => {\n        setFriends(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    api\n      .getBlockedFriends()\n      .then((res) => {\n        setBlockedFriends(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleName = (e) => {\n    setName(e.target.value);\n  }\n\n  const findFriend = () => {\n    api.findFriendByMail(name).then((res) => {\n      setFriendsRecommandation(res);\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n\n  return (\n    <Grid id=\"friend-box\" container>\n      <Grid item xs={5}>\n        <div id=\"friend-container\">\n          <h2 id=\"friend-title\"> Friends </h2>\n          <FriendList friends={friends} />\n          <h2 id=\"friend-title\"> Blocked friends </h2>\n          <FriendList friends={blockedFriends} blocked={true} />\n        </div>\n      </Grid>\n      <Grid item xs={7}>\n        <div id=\"friend-recommandation\">\n          <input type=\"text\" onChange={(e) => {\n            handleName(e);\n          }} id=\"friend-search\" />\n          <SearchIcon onClick={() => {\n            findFriend();\n          }} className={classes.PersonAddIcon} />{\" \"}\n        </div>\n        <div>\n          <FriendListRecommandation friends={friendsRecommandation} />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    Star,\n    StarHalf,\n    StarBorder\n} from '@material-ui/icons';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    starIcon: {\n        fontSize: '40px'\n    }\n}))\n\nexport default function Stars(props) {\n    const classes = useStyles();\n\n    const [fullStars, setFullStars] = useState([]);\n    const [halfStar, setHalfStar] = useState([]);\n    const [emptyStars, setEmptyStars] = useState([]);\n\n\n    useEffect(() => {\n        const roundedNote = Math.round(props.note * 2) / 2;\n        const isHalf = roundedNote % 1 === 0 ? false : true;\n\n        if (isHalf) {\n            const note = roundedNote - 0.5;\n            const empty = 4 - note;\n\n            const fullStarsArray = [];\n            const emptyStarsArray = [];\n\n            for (let i = note; i > 0; i--) {\n                fullStarsArray.push(<Star key={'full_' + i} className={classes.starIcon} />)\n            }\n            for (let k = empty; k > 0; k--) {\n                emptyStarsArray.push(<StarBorder key={('empty_') + k} className={classes.starIcon} />)\n            }\n\n            setFullStars(fullStarsArray);\n            setHalfStar([<StarHalf key={'half'} className={classes.starIcon} />])\n            setEmptyStars(emptyStarsArray);\n\n        } else {\n            const empty = 5 - roundedNote;\n\n            const fullStarsArray = [];\n            const emptyStarsArray = [];\n\n            for (let i = roundedNote; i > 0; i--) {\n                fullStarsArray.push(<Star key={'full_' + i} className={classes.starIcon} />)\n            }\n            for (let k = empty; k > 0; k--) {\n                emptyStarsArray.push(<StarBorder key={'empty_' + k} className={classes.starIcon} />)\n            }\n\n            setFullStars(fullStarsArray);\n            setEmptyStars(emptyStarsArray);\n        }\n        return () => { };\n    }, [props.note, classes.starIcon]);\n\n    return (\n        <div style={{ display: 'inline-block' }}>\n            {fullStars}\n            {halfStar}\n            {emptyStars}\n        </div>\n    )\n\n}","import React, { useEffect, useState } from 'react';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport './css/episode_card.css';\n\nimport api from '../../assets/js/api';\n\nconst useStyles = makeStyles(() => ({\n    moreIcon: {\n        fontSize: '95px',\n        cursor: 'pointer',\n        '&:hover': {\n            transform: 'scale(1.05)'\n        },\n        '&:active': {\n            transform: 'scale(0.95)'\n        }\n    },\n    seenIcon: {\n        color: '#2ecc71',\n        cursor: 'pointer',\n        '&:hover': {\n            color: '#ff2244'\n        }\n    },\n    notSeenIcon: {\n        color: '#ff2244',\n        cursor: 'pointer',\n        '&:hover': {\n            color: '#2ecc71'\n        }\n    }\n}))\n\nexport default function EpisodeCard(props) {\n\n    const classes = useStyles();\n\n    const [episodePicture, setEpisodePicture] = useState([]);\n    const [seen, setSeen] = useState(false);\n    const [pressStart, setPressStart] = useState(null);\n\n    useEffect(() => {\n        api.getEpisodePicture(props.episode.id).then((res) => {\n            setEpisodePicture(res);\n        }).catch((err) => {\n            console.log(err);\n        });\n\n        if (props.episode.user.seen) {\n            setSeen(true);\n        } else {\n            setSeen(false);\n        }\n        return () => { };\n    }, [props.episode]);\n\n    const longPress = (id) => {\n        const now = Date.now();\n\n        if ((now - pressStart) > 600) {\n            window.location.replace('/episode/' + id);\n        }\n    };\n\n    const addViewed = (episodeId) => {\n        api.addViewedEpisode(episodeId).then((res) => {\n            setSeen(true);\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n\n    const deleteViewed = (episodeId) => {\n        api.deleteViewedEpisode(episodeId).then((res) => {\n            setSeen(false);\n        }).catch((err) => {\n            console.log(err);\n        })\n    };\n\n    return (\n        <div className='episode-container'>\n            <img src={episodePicture} className='episode-img'\n                alt={props.episode.code + ' image'} />\n            <div className='episodes-infos'>\n                <h4 className='episode-code'>{props.episode.code}\n                </h4>\n                <p className='episode-title'>{props.episode.title}</p>\n                <p><FindInPageIcon\n                    onMouseDown={(e) => {\n                        setPressStart(Date.now())\n                    }}\n                    onMouseUp={(e) => {\n                        longPress(props.episode.id);\n                    }}\n                    className={classes.moreIcon} />\n                </p>\n                {seen ? (\n                    <p>\n                        <VisibilityIcon onClick={() => {\n                            deleteViewed(props.episode.id);\n                        }} className={classes.seenIcon} />\n                    </p>\n                ) : (\n                        <p>\n                            <VisibilityOffIcon onClick={() => {\n                                addViewed(props.episode.id);\n                            }} className={classes.notSeenIcon} />\n                        </p>\n                    )}\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState, } from 'react';\n\nimport EpisodeCard from './EpisodeCard';\n\nimport api from '../../assets/js/api';\n\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport './css/seasons.css';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    arrowIcon: {\n        fontSize: '45px'\n    }\n}))\n\nexport default function Seasons(props) {\n    const classes = useStyles();\n\n    const [episodes, setEpisodes] = useState([]);\n\n    const carousel = React.createRef();\n\n    useEffect(() => {\n        api.getEpisodesBySeason(props.showId, props.season).then((res) => {\n            console.log(res);\n            setEpisodes(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n        return () => { };\n    }, [props.season, props.showId]);\n\n    const scrollLeft = () => {\n        carousel.current.scrollLeft = carousel.current.scrollLeft + 720;\n    }\n\n    const scrollRight = () => {\n        carousel.current.scrollLeft = carousel.current.scrollLeft - 720;\n    }\n\n    return (\n        <div id='episodes-container'>\n            <div\n                className='carousel-arrow'\n                id='carousel-arrow-left'\n                onClick={() => {\n                    scrollRight();\n                }}>\n                <NavigateBeforeIcon className={classes.arrowIcon} />\n            </div>\n            <div\n                className='carousel-arrow'\n                id='carousel-arrow-right'\n                onClick={() => {\n                    scrollLeft();\n                }}>\n                <NavigateNextIcon className={classes.arrowIcon} />\n            </div>\n            <div ref={carousel} id='episodes-carousel'>\n                {episodes.length > 0 ? (\n                    episodes.map((episode, key) =>\n                        <EpisodeCard key={key} episode={episode} />\n                    )\n                ) : (null)}\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport {\n    Grid,\n    Button\n} from '@material-ui/core';\n\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nimport Stars from '../global/Stars';\n\nimport Seasons from './Seasons';\nimport api from '../../assets/js/api';\n\nimport './css/show.css';\n\nconst useStyles = makeStyles(() => ({\n    seasonButton: {\n        color: '#ff2244',\n        fontSize: '20px',\n        fontWeight: 'bold',\n    },\n    actived: {\n        backgroundColor: '#ff2244',\n        color: '#f1f1f1',\n        fontSize: '20px',\n        fontWeight: 'bold',\n        '&:hover': {\n            backgroundColor: '#ff2244'\n        }\n    },\n    icons: {\n        fontSize: '35px',\n        cursor: 'pointer'\n    }\n}));\n\nexport default function Show(props) {\n    const classes = useStyles();\n\n    const [show, setShow] = useState([]);\n    const [currentSeason, setCurrentSeason] = useState(1);\n\n    const [favorited, setFavorited] = useState(null);\n    const [archived, setArchived] = useState(null);\n\n    useEffect(() => {\n        const showId = props.match.params.id;\n\n        api.getShow(showId).then((res) => {\n            console.log(res);\n            if (res.user.archived) {\n                setArchived(true)\n            } else {\n                setArchived(false);\n            }\n            if (res.user.favorited) {\n                setFavorited(true)\n            } else {\n                setFavorited(false);\n            }\n            setShow(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n\n        return () => { };\n    }, [props.match.params.id]);\n\n    const displayGenres = (genres) => {\n        let genresOutput = [];\n        for (const genre in genres) {\n            genresOutput.push(genre);\n        }\n        return genresOutput;\n    }\n\n    const addArchive = (id) => {\n        api.addShowArchive(id).then((res) => {\n            setArchived(true);\n            console.log('show added to archive');\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    const deleteArchive = (id) => {\n        api.deleteShowArchive(id).then((res) => {\n            setArchived(false);\n            console.log('show deleted from archive');\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    const addFavorite = (id) => {\n        api.addShowFavorite(id).then((res) => {\n            setFavorited(true);\n            console.log('show added to favorite');\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    const deleteFavorite = (id) => {\n        api.deleteShowFavorite(id).then((res) => {\n            setFavorited(false);\n            console.log('show deleted from favorite');\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <>\n            {\n                Object.keys(show).length > 0 ? (\n                    <Grid container>\n                        <Grid item xs={3} id='img-container'>\n                            <img\n                                id='show-img' src={show.images.poster}\n                                alt={show.original_title + 'banner'} />\n                        </Grid>\n                        <Grid item xs={9} id='infos-container'>\n                            <h3 id='show-title'>{show.original_title}</h3>\n                            {favorited ? (\n                                <FavoriteIcon onClick={() => {\n                                    deleteFavorite(show.id);\n                                }} className={classes.icons} />\n                            ) : (\n                                    <FavoriteBorderIcon onClick={() => {\n                                        addFavorite(show.id);\n                                    }} className={classes.icons} />\n                                )}\n                            {archived ? (\n                                <BookmarkIcon onClick={() => {\n                                    deleteArchive(show.id);\n                                }} className={classes.icons} />\n                            ) : (\n                                    <BookmarkBorderIcon onClick={() => {\n                                        addArchive(show.id);\n                                    }} className={classes.icons} />\n                                )}\n                            <p><em>Seasons: {show.seasons}</em></p>\n                            <p>Genre: {displayGenres(show.genres).map((genre, key) =>\n                                <em key={key}>{genre + ' '}</em>\n                            )}</p>\n                            <p><em>{show.episodes}</em> épisode(s)</p>\n                            <p id='show-description'><em>{show.description}</em></p>\n                            <p>Average episode length : <em>{show.length} min.</em></p>\n                            <Stars note={show.notes.mean} />\n                            <p id='show-note'>({show.notes.mean.toFixed(2)} from {show.notes.total} votes)</p>\n                            <div id='seasons-container'>\n                                {show.seasons_details.map((season, key) =>\n                                    <Button\n                                        onClick={() => {\n                                            setCurrentSeason(season.number)\n                                        }}\n                                        className={currentSeason === season.number ? classes.actived : classes.seasonButton} key={key}>\n                                        Season {season.number}\n                                    </Button>\n                                )}\n                                <Seasons id='show-episodes' showId={show.id} season={currentSeason} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                ) : (null)\n            }\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nimport {\n    Grid,\n    Button\n} from '@material-ui/core';\n\nimport Stars from '../global/Stars';\nimport Seasons from '../show/Seasons';\n\nimport api from '../../assets/js/api';\n\nimport './css/episode.css';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    commentButton: {\n        color: '#f1f1f1',\n        fontSize: '24px'\n    }\n}))\n\nexport default function Episode(props) {\n    const classes = useStyles();\n\n    const [episode, setEpisode] = useState([]);\n    const [episodePicture, setEpisodePicture] = useState([]);\n    const [comment, setComment] = useState('');\n\n    const dateformat = require('dateformat');\n\n    useEffect(() => {\n        const episodeId = props.match.params.id;\n\n        api.getEpisode(episodeId).then((res) => {\n            console.log(res);\n            setEpisode(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n\n        api.getEpisodePicture(episodeId).then((res) => {\n            setEpisodePicture(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n        return () => { };\n    }, [props.match.params.id]);\n\n    const dateFormat = (inputDate) => {\n        const outputDate = dateformat(inputDate, 'longDate')\n\n        return outputDate;\n    }\n\n    const handleComment = (e) => {\n        setComment(e.target.value);\n    }\n\n    const sendComment = (episodeId) => {\n        console.log(comment, episodeId)\n        api.sendEpisodeComment(comment, episodeId).then((res) => {\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <>\n            {Object.keys(episode).length > 0 ? (\n                <>\n                    <Grid container justify='center' id='episode-infos-container'>\n                        <Grid item xs={6} id='episode-infos'>\n                            <h4 id='episode-big-title'>{episode.show.title} - {episode.code}</h4>\n                            <em id='episode-title'>{episode.title} - {dateFormat(episode.date)}</em>\n                            <p id='episode-description'>{episode.description}</p>\n                            <Stars note={episode.note.mean} />\n                            <p id='show-note'>({episode.note.mean.toFixed(2)} from {episode.note.total} votes)</p>\n                            <textarea id='episode-comment' onChange={(e) => {\n                                handleComment(e);\n                            }}></textarea>\n                            <Button onClick={() => {\n                                sendComment(episode.id);\n                            }} className={classes.commentButton}>Comment</Button>\n                        </Grid>\n                        <Grid item>\n                            <img id='episode-img' src={episodePicture}\n                                alt={episode.code + ' image'} />\n                        </Grid>\n                    </Grid>\n                    <Grid container justify='center'>\n                        <Grid item xs={10}>\n                            <Seasons id='episode-season' showId={episode.show.id} season={episode.season} />\n                        </Grid>\n                    </Grid>\n                </>\n            ) : (null)}\n        </>\n    )\n}","import React, { useState } from 'react';\n\nimport {\n    Grid,\n    IconButton\n} from '@material-ui/core';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport user from '../../assets/js/user';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nimport './css/login.css';\n\nconst useStyles = makeStyles(() => ({\n    lockOpen: {\n        color: '#2ecc71',\n        fontSize: '150px'\n    },\n    lockClose: {\n        color: '#ff2244',\n        fontSize: '150px'\n    }\n}))\n\nexport default function Login() {\n    const classes = useStyles();\n    const [lock, setLock] = useState(false);\n\n    return (\n        <Grid container justify='center'>\n            <Grid item xs={8}>\n                <div id='login-container'>\n                    <IconButton onMouseEnter={() => {\n                        setLock(true)\n                    }} onMouseLeave={() => {\n                        setLock(false)\n                    }} onClick={() => {\n                        user.con();\n                    }}>\n                        {lock ? (\n                            <LockOpenIcon className={classes.lockOpen} />\n                        ) : (\n                                <LockIcon className={classes.lockClose} />\n                            )\n                        }\n                    </IconButton>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}","import React, { useEffect } from 'react';\n\nimport {\n    Grid,\n    CircularProgress\n} from '@material-ui/core';\n\nimport user from '../../assets/js/user';\n\nimport {\n    makeStyles\n} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    loading: {\n        color: '#ff2244'\n    }\n}))\n\nexport default function GetCode() {\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        user.discon().then((res) => {\n            user.removeToken();\n            window.location.href = '/login';\n        }).catch((err) => {\n            console.log(err);\n            user.removeToken();\n            window.location.href = '/login';\n        })\n\n        return () => { };\n    }, []);\n\n    return (\n        <Grid container justify='center' alignItems='center'>\n            <Grid style={{ textAlign: 'center' }} item>\n                <h2>Logging Out ...</h2>\n                <CircularProgress size='75px' className={classes.loading} />\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\n\nimport {\n    Switch,\n    Route,\n    withRouter,\n    Redirect\n} from 'react-router-dom';\n\nimport Header from '../components/global/Header';\n\nimport GetCode from '../components/global/GetCode';\n\nimport Home from '../components/global/Home';\nimport Discover from '../components/global/Discover';\nimport Friends from '../components/friend/Friends';\n\nimport Show from '../components/show/Show';\nimport Episode from '../components/episode/Episode';\n\nimport Login from '../components/global/Login';\nimport Logout from '../components/global/Logout';\n\nimport user from '../assets/js/user';\n\nconst ConnectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        user.isAuthenticated()\n            ? <Component {...props} />\n            : <Redirect to='/login' />\n    )} />\n)\n\nconst NotConnectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        user.isAuthenticated()\n            ? <Redirect to='/home' />\n            : <Component {...props} />\n    )} />\n)\n\nfunction Routes() {\n    return (\n        <>\n            <Header />\n            <Switch>\n                <NotConnectedRoute exact path='/login' component={Login} />\n                <NotConnectedRoute exact path='/getcode' component={GetCode} />\n                <ConnectedRoute exact path='/disconnect' component={Logout} />\n                <ConnectedRoute exact path='/home' component={Home} />\n                <ConnectedRoute exact path='/discover' component={Discover} />\n                <ConnectedRoute exact path='/friends' component={Friends} />\n                <ConnectedRoute path='/show/:id' component={Show} />\n                <ConnectedRoute path='/episode/:id' component={Episode} />\n                <Route path='*'>\n                    <Redirect to='/home' />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nexport default withRouter(Routes);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './routes/Routes';\n\nimport './assets/css/fonts.css';\nimport './assets/css/main.css';\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}